@page "/trainings"
@inject ITrainingService TrainingService
@using SimpleEventAccountingMobile.Database.DbModels
@using SimpleEventAccountingMobile.Services.Interfaces
@inject NavigationManager NavigationManager
@inject IErrorService ErrorService

<PageTitle>Тренировки</PageTitle>

<div class="page-header">
    <h1 class="page-title">Тренировки</h1>
</div>

<hr />

@if (trainings == null)
{
    <p><em>Загрузка...</em></p>
}
else if (!trainings.Any())
{
    <p>Тренировок не найдено.</p>
}
else
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Название</th>
            <th>Дата</th>
            <th>Кол-во</th>
            <th>Детали</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var training in trainings)
        {
            var clientsParticipation = training.TrainingClients?.Count(x => x.IsParticipate) ?? 0;
            var clientsAll = training.TrainingClients?.Count() ?? 0;

            <tr>
                <td>@training.Name</td>
                <td>@training.Date.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@clientsParticipation (@clientsAll) </td>
                <td>
                    <button class="btn btn-sm btn-primary button-icon" @onclick="() => GoToTraining(training.Id)">
                        <span class="bi bi-postcard" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @if (hasMoreItems)
    {
        <div class="action-buttons">
            <button type="button" class="submit-button" @onclick="LoadTrainings">
                <span class="submit-icon">↓</span>
                Показать еще 15 тренировок
            </button>
        </div>
    }

    <!-- Submit Button -->
    <div class="action-buttons">
        <button type="button" class="back-button" @onclick="GoHome">
            <span class="back-icon">←</span>
            Назад
        </button>
        <button type="button" class="submit-button" @onclick="CreateNewTraining">
            <span class="submit-icon">+</span>
            Провести тренировку
        </button>
    </div>
}

@code {
    private List<Training>? trainings;
    private int skip = 0; // Number of items already loaded
    private const int take = 15; // Number of items to fetch at a time
    private bool hasMoreItems = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadTrainings();
        }
        catch (Exception ex)
        {
            ErrorService.ShowError(ex, "Ошибка загрузки страницы");
        }
    }

    private async Task LoadTrainings()
    {
        var newTrainings = await TrainingService.GetTrainingsAsync(skip, take);
        trainings = trainings?.Concat(newTrainings).ToList() ?? newTrainings;

        if (newTrainings.Count < take)
        {
            hasMoreItems = false;
        }
        else
        {
            skip += take;
        }

        StateHasChanged();
    }

    private void GoToTraining(Guid trainingId)
    {
        NavigationManager.NavigateTo($"/trainings/{trainingId}");
    }

    private void CreateNewTraining()
    {
        NavigationManager.NavigateTo($"/conduct-training");
    }

    private void GoHome()
    {
        NavigationManager.NavigateTo($"/");
    }
}