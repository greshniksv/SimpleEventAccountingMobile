@page "/settings"
@using System.Globalization
@using Microsoft.Extensions.Localization
@using SimpleEventAccountingMobile.Services.Interfaces
@inject IStringLocalizer Localizer
@inject ILanguageService LanguageService
@inject NavigationManager NavigationManager
@implements IDisposable
@inject IAppInfoService AppInfoService

<PageTitle>Настройки</PageTitle>
<h3>Настройки</h3>

<form>
    
    <div class="mb-3">
        <label for="name" class="form-label">Название:</label>
        <InputText id="name" class="form-control" readonly @bind-Value="_appName" />
    </div>
    
    <div class="mb-3">
        <label for="version" class="form-label">Версия:</label>
        <InputText id="version" class="form-control" readonly @bind-Value="_appVersion" />
    </div>
    
    <div class="mb-3">
        <label for="build" class="form-label">Номер сборки:</label>
        <InputText id="build" class="form-control" readonly @bind-Value="_buildNumber" />
    </div>
    
    <div class="mb-3">
        <label for="name" class="form-label">Выбор языка:</label>
        <select class="form-control" @onchange="OnLanguageChanged">
            @foreach (var lang in LanguageService.SupportedLanguages)
            {
                <option value="@lang.Name" selected="@(lang.Name == LanguageService.CurrentCulture.Name)">
                    @lang.DisplayName
                </option>
            }
        </select>
    </div>
    
    <div class="mb-3">
        <button type="button" class="delete-button" @onclick="GoDeleted">
            <span class="submit-icon">+</span>
            Провести тренировку
        </button>
    </div>
    
   

    <div class="action-buttons">
        <button type="button" class="back-button" @onclick="GoHome">
            <span class="back-icon">←</span>
            Назад
        </button>
    </div>

</form>

@code {

    private string _appName = string.Empty;
    private string _appVersion = string.Empty;
    private string _buildNumber = string.Empty;

    protected override void OnInitialized()
    {
        _appName = AppInfoService.GetAppName();
        _appVersion = AppInfoService.GetAppVersion();
        _buildNumber = AppInfoService.GetBuildNumber();

        LanguageService.CultureChanged += OnCultureChanged;
    }

    private async Task OnLanguageChanged(ChangeEventArgs e)
    {
        LanguageService.SetLanguage(e.Value.ToString());

        // Перезагрузка страницы для применения изменений
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void OnCultureChanged(object? sender, CultureInfo culture)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LanguageService.CultureChanged -= OnCultureChanged;
    }

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private void GoDeleted()
    {
        NavigationManager.NavigateTo("/clients/deleted");
    }
}
