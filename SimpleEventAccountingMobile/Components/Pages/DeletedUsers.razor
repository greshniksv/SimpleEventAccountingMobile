@page "/clients/deleted"
@using SimpleEventAccountingMobile.Database.DbModels
@using SimpleEventAccountingMobile.Services.Interfaces
@inject IClientService ClientService
@inject NavigationManager NavigationManager

<PageTitle>Deleted Clients</PageTitle>

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">
                            <i class="fas fa-trash me-2"></i>Deleted Clients
                        </h3>
                        <span class="badge bg-light text-dark fs-6">@_deletedClients?.Count clients</span>
                    </div>
                </div>

                <div class="card-body">
                    @if (_isLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-danger" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="text-muted mt-3">Loading deleted clients...</p>
                        </div>
                    }
                    else if (_deletedClients == null || !_deletedClients.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No deleted clients found</h4>
                            <p class="text-muted">There are no clients in the recycle bin.</p>
                        </div>
                    }
                    else
                    {




                        <ul class="list-group">
                            
                        @foreach (var client in _deletedClients)
                        {

                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @client.Name
                                    <span class="badge badge-primary badge-pill">
                                        
                                        <button class="btn btn-sm btn-secondary button-icon" @onclick="() => HistoryClient(client.Id)">
                                            <span class="bi bi-clipboard-check" aria-hidden="true"></span>
                                        </button>
                                        
                                        <button class="btn btn-sm btn-secondary button-icon" @onclick="() => EditClient(client.Id)">
                                            <span class="bi bi-pencil" aria-hidden="true"></span>
                                        </button>

                                        <button class="btn btn-sm btn-danger button-icon" @onclick="() => RestoreClient(client.Id)">
                                            <span class="bi bi-trash" aria-hidden="true"></span>
                                        </button>
                                    </span>

                            </li>
                        }

                        </ul>



                       @*  <div class="list-group list-group-flush">
                            @foreach (var client in _deletedClients)
                            {
                                <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center py-3">
                                    <div class="d-flex align-items-center">
                                        <div class="user-avatar bg-secondary text-white rounded-circle d-flex align-items-center justify-content-center me-3"
                                             style="width: 40px; height: 40px;">
                                            @GetInitials(client.Name)
                                        </div>
                                        <div>
                                            <h6 class="mb-1 text-dark">@client.Name</h6>
                                            <small class="text-muted">Berth day @client.Birthday.ToString("dd.MM.yyyy")</small>
                                        </div>
                                    </div>

                                    <div class="btn-group" role="group">
                                        <button type="button"
                                                class="btn btn-outline-primary btn-sm"
                                                @onclick="() => HistoryClient(client.Id)"
                                                title="View History">
                                            <i class="fas fa-history"></i>
                                            <span class="d-none d-md-inline ms-1">History</span>
                                        </button>
                                        <button type="button"
                                                class="btn btn-success btn-sm"
                                                @onclick="() => RestoreClient(client.Id)"
                                                title="Restore Client">
                                            <i class="fas fa-undo"></i>
                                            <span class="d-none d-md-inline ms-1">Restore</span>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div> *@
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Client>? _deletedClients;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDeletedClients();
    }

    private async Task LoadDeletedClients()
    {
        _isLoading = true;
        StateHasChanged();

        try
        {
            _deletedClients = await ClientService.GetDeletedAsync();
        }
        catch (Exception ex)
        {
            // Handle error (you might want to add error handling UI)
            Console.WriteLine($"Error loading deleted clients: {ex.Message}");
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RestoreClient(Guid clientId)
    {
        try
        {
            await ClientService.RestoreDeletedAsync(clientId);

            // Remove the restored client from the list
            _deletedClients?.RemoveAll(c => c.Id == clientId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error restoring client: {ex.Message}");
        }
    }

    private void HistoryClient(Guid clientId)
    {
        NavigationManager.NavigateTo($"/clients/history/{clientId}");
    }

    private void EditClient(Guid clientId)
    {
        NavigationManager.NavigateTo($"/clients/edit/{clientId}");
    }

    private string GetInitials(string? name)
    {
        if (string.IsNullOrEmpty(name))
            return "??";

        var names = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (names.Length >= 2)
            return $"{names[0][0]}{names[1][0]}".ToUpper();

        return name.Length >= 2 ? name[..2].ToUpper() : name.ToUpper();
    }
}