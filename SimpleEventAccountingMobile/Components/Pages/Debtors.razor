@page "/debtors"
@using SimpleEventAccountingMobile.Dtos
@using SimpleEventAccountingMobile.Services.Interfaces
@inject ITrainingService TrainingService

<PageTitle>Должники - SimpleEvent</PageTitle>

<div class="container-fluid py-1">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center mb-3">
                <i class="fas fa-users-slash text-primary me-3" style="font-size: 2rem;"></i>
                <h1 class="h2 mb-0 text-dark">Управление должниками</h1>
            </div>
            <p class="text-muted">Обзор задолженностей по тренировкам и наличным расчетам</p>
        </div>
    </div>

    <!-- Training Debtors Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-dumbbell me-2"></i>
                        <h5 class="card-title mb-0">Должники по тренировкам</h5>
                    </div>
                    <span class="badge bg-light text-primary fs-6">
                        @(trainingDebtors?.Count ?? 0)
                    </span>
                </div>
                <div class="card-body">
                    @if (trainingDebtors == null)
                    {
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Загрузка...</span>
                            </div>
                            <p class="text-muted mt-2">Загрузка данных о должниках...</p>
                        </div>
                    }
                    else if (!trainingDebtors.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-check-circle text-success" style="font-size: 3rem;"></i>
                            <p class="text-muted mt-2">Все клиенты оплатили тренировки!</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th class="ps-4">Клиент</th>
                                        <th class="text-end pe-4">Долг</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var debtor in trainingDebtors.OrderByDescending(d => d.Count))
                                    {
                                        <tr class="align-middle">
                                            <td class="ps-1">
                                                <div class="d-flex align-items-center">
                                                    <div>
                                                        <strong>@debtor.Client.Name</strong>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-end pe-4">
                                                <span class="fw-bold text-danger fs-6">
                                                    @debtor.Count.ToString("#")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Cash Debtors Card -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-money-bill-wave me-2"></i>
                        <h5 class="card-title mb-0">Должники по наличным расчетам</h5>
                    </div>
                    <span class="badge bg-light text-success fs-6">
                        @(cashDebtors?.Count ?? 0)
                    </span>
                </div>
                <div class="card-body">
                    @if (cashDebtors == null)
                    {
                        <div class="text-center py-4">
                            <div class="spinner-border text-success" role="status">
                                <span class="visually-hidden">Загрузка...</span>
                            </div>
                            <p class="text-muted mt-2">Загрузка данных о должниках...</p>
                        </div>
                    }
                    else if (!cashDebtors.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-check-circle text-success" style="font-size: 3rem;"></i>
                            <p class="text-muted mt-2">Нет задолженностей по наличным расчетам!</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th class="ps-4">Клиент</th>
                                        <th class="text-end pe-4">Долг</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var debtor in cashDebtors.OrderByDescending(d => d.Cash))
                                    {
                                        <tr class="align-middle">
                                            <td class="ps-1">
                                                <div class="d-flex align-items-center">
                                                    <div>
                                                        <strong>@debtor.Client.Name</strong>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-end pe-2">
                                                <span class="fw-bold text-danger fs-6">
                                                    @debtor.Cash.ToString("#")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<TrainingDebtClient> trainingDebtors;
    private List<CashDebtClient> cashDebtors;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            trainingDebtors = await TrainingService.GetTrainingDebtClientsAsync();
            cashDebtors = await TrainingService.GetCashDebtClientsAsync();
        }
        catch (Exception ex)
        {
            // Handle error (you might want to add error state handling)
            Console.WriteLine($"Error loading debtors: {ex.Message}");
        }
    }
}